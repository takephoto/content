/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.deskclock;

public final class R {
    public static final class anim {
        public static final int dim=0x7f050000;
        public static final int dim_instant=0x7f050001;
        public static final int fade_in=0x7f050002;
        public static final int fade_out=0x7f050003;
        public static final int hide=0x7f050004;
        public static final int undim=0x7f050005;
        public static final int undim_instant=0x7f050006;
        public static final int unhide=0x7f050007;
        public static final int unhide_instant=0x7f050008;
    }
    public static final class array {
        /**  Alarm confirmation toast: Describes how long from now until
         alarm fires 
         */
        public static final int alarm_set=0x7f0a000a;
        /**  Entries listed in the ListPreference when invoking the auto silence
         preference. 
         */
        public static final int auto_silence_entries=0x7f0a000b;
        /**  Values that are retrieved from the ListPreference. These must match
         the auto_silence_entries above. 
 Off 
         */
        public static final int auto_silence_values=0x7f0a000c;
        public static final int cities_id=0x7f0a0002;
        public static final int cities_names=0x7f0a0000;
        public static final int cities_tz=0x7f0a0001;
        /**  Entries listed in the ListPreference when invoking the clock style
         preference. 
         */
        public static final int clock_style_entries=0x7f0a0013;
        /**  Values that are retrieved from the ListPreference. These must match
         the clock_style_entries above. 
         */
        public static final int clock_style_values=0x7f0a0014;
        public static final int dismiss_descriptions=0x7f0a0007;
        public static final int dismiss_direction_descriptions=0x7f0a0008;
        public static final int dismiss_drawables=0x7f0a0006;
        /**  Formatted stopwatch time for laps shared using the share button 
         */
        public static final int shared_laps_format_set=0x7f0a0010;
        public static final int snooze_dismiss_descriptions=0x7f0a0004;
        public static final int snooze_dismiss_direction_descriptions=0x7f0a0005;
        public static final int snooze_dismiss_drawables=0x7f0a0003;
        /**  Formatted stopwatch time 
         */
        public static final int stopwatch_format_set=0x7f0a000f;
        /**  Label to enumerate the number of laps the user has counted 
         */
        public static final int sw_lap_number_set=0x7f0a0011;
        /**  Jocular content that user may append when sharing the lap times 
         */
        public static final int sw_share_strings=0x7f0a0012;
        /**  Timer notification: how long from now until timer goes off. 
         */
        public static final int timer_notifications=0x7f0a0009;
        /**  Choices for timezones, must be kept in sync with timezone_values. CHAR LIMIT=25] 
         */
        public static final int timezone_labels=0x7f0a0015;
        /**  Choices for timezones, must be kept in sync with timezone_values. 
         */
        public static final int timezone_values=0x7f0a0016;
        /**  Entries listed in the setting for the side-button action. 
         */
        public static final int volume_button_setting_entries=0x7f0a000d;
        /**  Values for the side-button setting. 
         */
        public static final int volume_button_setting_values=0x7f0a000e;
    }
    public static final class attr {
        /**  Used when the handle shouldn't wait to be hit before following the finger 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alwaysTrackFinger=0x7f01000c;
        /**  Reference to an array resource that be used to announce the directions with targets around the circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int directionDescriptions=0x7f010002;
        /**  Number of waves/chevrons to show in animation. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int feedbackCount=0x7f01000b;
        /**  Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "h:mm a". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int format12Hour=0x7f010010;
        /**  Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "H:mm". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int format24Hour=0x7f010011;
        /**  Size of target radius. Points within this distance of target center is a "hit". 

        <attr name="hitRadius" format="dimension"/>
        
 Radius of glow under finger. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int glowRadius=0x7f010008;
        /**  Sets a drawable as the center. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int handleDrawable=0x7f010003;
        /**  Inner radius of glow area. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int innerRadius=0x7f010006;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int jewelColor=0x7f01000f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int jewelOffset=0x7f01000e;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int jewelRadius=0x7f01000d;
        /**  Outer radius of glow area. Target icons will be drawn on this circle. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int outerRadius=0x7f010007;
        /**  Drawable to use for wave ripple animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int outerRingDrawable=0x7f010004;
        /**  Drawble used for drawing points 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int pointDrawable=0x7f010005;
        /**  How close we need to be before snapping to a target. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int snapMargin=0x7f01000a;
        /**  Reference to an array resource that be used as description for the targets around the circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int targetDescriptions=0x7f010001;
        /**  Reference to an array resource that be shown as targets around a circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int targetDrawables=0x7f010000;
        /**  Tactile feedback duration for actions. Set to '0' for no vibration. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int vibrationDuration=0x7f010009;
    }
    public static final class bool {
        /**  no need for the dock app, we have Dreams now 
         */
        public static final int config_dockAppEnabled=0x7f0c0001;
        public static final int config_requiresScreenSaver=0x7f0c0000;
        public static final int config_rotateAlarmAlert=0x7f0c0002;
    }
    public static final class color {
        public static final int action_bar_button_text_color=0x7f0b0006;
        public static final int alarm_selected_color=0x7f0b001b;
        public static final int alarm_timeline_color=0x7f0b001c;
        public static final int alarm_whiteish=0x7f0b0011;
        public static final int ampm_off=0x7f0b0000;
        public static final int ampm_on=0x7f0b0001;
        public static final int ampm_text_color=0x7f0b0003;
        public static final int black=0x7f0b0008;
        /**  If this color is changed or no longer used as the primary background, ensure that blackish_trans is changed as well. 
         */
        public static final int blackish=0x7f0b0009;
        public static final int blackish_selected=0x7f0b000a;
        /**  Transparent background for use in the footer. 80% opacity. The color must remain the same as "blackish" above. 
         */
        public static final int blackish_trans=0x7f0b000b;
        public static final int blue=0x7f0b0023;
        public static final int blue_focused=0x7f0b0024;
        public static final int calendar_header=0x7f0b0028;
        public static final int calendar_selected_date_text=0x7f0b002a;
        public static final int circle_background=0x7f0b001d;
        public static final int clock_blue=0x7f0b0019;
        public static final int clock_gray=0x7f0b0018;
        public static final int clock_red=0x7f0b0016;
        public static final int clock_white=0x7f0b0017;
        public static final int dark_gray=0x7f0b002d;
        public static final int darker_blue=0x7f0b0026;
        public static final int date_picker_selector=0x7f0b0032;
        public static final int date_picker_text_normal=0x7f0b0027;
        public static final int date_picker_view_animator=0x7f0b0029;
        public static final int date_picker_year_selector=0x7f0b0033;
        public static final int dialog_gray=0x7f0b0007;
        public static final int done_disabled_dark=0x7f0b0031;
        public static final int done_text_color=0x7f0b0034;
        public static final int done_text_color_dark=0x7f0b0035;
        public static final int done_text_color_dark_disabled=0x7f0b0030;
        public static final int done_text_color_dark_normal=0x7f0b002f;
        public static final int done_text_color_disabled=0x7f0b0020;
        public static final int done_text_color_normal=0x7f0b001f;
        public static final int grey=0x7f0b000e;
        public static final int light_gray=0x7f0b002c;
        public static final int line_background=0x7f0b001e;
        public static final int line_dark=0x7f0b002e;
        public static final int main_button_normal=0x7f0b0012;
        public static final int main_button_red_normal=0x7f0b0014;
        /**  same as clock_red 
         */
        public static final int main_button_red_selected=0x7f0b0015;
        public static final int main_button_selected=0x7f0b0013;
        public static final int neutral_pressed=0x7f0b0025;
        public static final int notification_bg=0x7f0b001a;
        public static final int numbers_text_color=0x7f0b0021;
        /**  Colors for red theme 
         */
        public static final int red=0x7f0b000d;
        public static final int red_focused=0x7f0b002b;
        public static final int screen_saver_color=0x7f0b0004;
        public static final int screen_saver_dim_color=0x7f0b0005;
        public static final int time_text_color=0x7f0b0002;
        public static final int transparent=0x7f0b000f;
        public static final int transparent_black=0x7f0b0022;
        public static final int transparent_white=0x7f0b0010;
        public static final int white=0x7f0b000c;
    }
    public static final class dimen {
        public static final int actionbar_tab_padding=0x7f090023;
        public static final int actionbar_title_font_size=0x7f090024;
        public static final int alarm_alert_clock_padding_left=0x7f090084;
        /**  Width of the clock, for use with alarm buttons. 
 Width of the clock, for use with alarm buttons. 
         */
        public static final int alarm_alert_display_width=0x7f090063;
        public static final int alarm_label_padding=0x7f090014;
        public static final int alarm_label_size=0x7f090045;
        public static final int alarm_min_distance=0x7f09002f;
        public static final int alarm_text_font_size=0x7f09002e;
        public static final int alarm_text_padding=0x7f09002d;
        public static final int alarm_time_font_size=0x7f09003f;
        public static final int alarm_timeline_inner_radius=0x7f09002c;
        public static final int alarm_timeline_layout_padding_top=0x7f090030;
        public static final int alarm_timeline_layout_width=0x7f090027;
        public static final int alarm_timeline_length=0x7f09002a;
        public static final int alarm_timeline_margin_top=0x7f090029;
        public static final int alarm_timeline_radius=0x7f09002b;
        public static final int alarm_timeline_title_margin_bottom=0x7f090031;
        public static final int alarm_timeline_title_text_size=0x7f090032;
        public static final int alarm_timeline_width=0x7f090028;
        public static final int alarm_undo_bar_horizontal_margin=0x7f090033;
        public static final int alert_dialog_title_height=0x7f090015;
        public static final int ampm_label_size=0x7f090087;
        public static final int ampm_left_padding=0x7f090089;
        public static final int ampm_margin_top=0x7f090011;
        public static final int ampm_text_size=0x7f090004;
        /**  Analog clock size in the the screen saver 
         */
        public static final int analog_clock_diameter=0x7f09001f;
        public static final int analog_clock_margin=0x7f09005b;
        public static final int big_font_size=0x7f090037;
        public static final int body_font_padding=0x7f090041;
        public static final int body_font_size=0x7f09003e;
        public static final int bottom_text_size=0x7f090022;
        public static final int bottom_text_spacing_analog=0x7f090019;
        public static final int bottom_text_spacing_analog_small=0x7f09001a;
        public static final int bottom_text_spacing_digital=0x7f090017;
        public static final int button_font_size=0x7f090042;
        /**  Height of the button footers. 56 height and 16 on top and bottom. 
         */
        public static final int button_footer_height=0x7f09006c;
        /**  Negative value of the height of the button footers, for use with lightsout. 
         */
        public static final int button_footer_height_neg=0x7f09006d;
        /**  Size of margin for circles. 
         */
        public static final int circle_margin=0x7f09005a;
        /**  Size of margin for circles. 
 Size of margin for circles. 
 Size of margin for circles. 
         */
        public static final int circle_margin_top=0x7f090059;
        public static final int circletimer_circle_size=0x7f090035;
        public static final int circletimer_dot_size=0x7f090034;
        public static final int circletimer_marker_size=0x7f090036;
        public static final int cities_list_item_height=0x7f090058;
        public static final int city_name_font_size=0x7f090056;
        public static final int city_time_font_size=0x7f090057;
        /**  Bottom margin for the expand area 
         */
        public static final int collapse_expand_height=0x7f090083;
        public static final int date_picker_component_width=0x7f090090;
        public static final int date_picker_header_height=0x7f090091;
        public static final int date_picker_header_text_size=0x7f09009c;
        public static final int date_picker_view_animator_height=0x7f090093;
        public static final int date_text_size=0x7f090005;
        public static final int day_number_select_circle_radius=0x7f090097;
        public static final int day_number_size=0x7f09009e;
        /**  Empty space at the edges of the delete button icons. Based off of 56dip width, only nonzero for tablets. 
 Empty space at the edges of the delete button icons. Based off of 56dip width. 
 Empty space at the edges of the delete button icons. Based off of 56dip width. 
         */
        public static final int delete_button_padding=0x7f090068;
        public static final int dialog_button_font_size=0x7f090044;
        public static final int dialog_height=0x7f0900a1;
        /** padding should be (in dip) ~ 60% dialpad_font_size 
         */
        public static final int dialpad_digit_padding=0x7f090050;
        public static final int dialpad_font_size=0x7f09004f;
        public static final int digital_main_clock_text_size=0x7f09001d;
        public static final int digital_margin_bottom=0x7f09000e;
        public static final int digital_screensaver_clock_text_size=0x7f09001e;
        public static final int digital_widget_city_margin_bottom=0x7f090082;
        /**  top margin for digital_appwidget_listview 
         */
        public static final int digital_widget_list_margin_top=0x7f090081;
        /**  sum of fixed heights 
         */
        public static final int digital_widget_list_min_fixed_height=0x7f090080;
        /**  sum of scaled heights 
         */
        public static final int digital_widget_list_min_scaled_height=0x7f09007f;
        public static final int digital_world_clock_ampm_text_size=0x7f09001c;
        public static final int digital_world_clock_text_size=0x7f09001b;
        public static final int done_button_height=0x7f090094;
        public static final int done_label_size=0x7f090088;
        public static final int extra_time_label_margin=0x7f090086;
        public static final int font_margin_adjust=0x7f090012;
        public static final int footer_button_layout_margin=0x7f090026;
        public static final int footer_button_size=0x7f090025;
        public static final int footer_height=0x7f09008c;
        /**  Default glow radius for GlowPadView 
         */
        public static final int glowpadview_glow_radius=0x7f090071;
        /**  Default distance from each snap target that GlowPadView considers a "hit" 
         */
        public static final int glowpadview_inner_radius=0x7f090073;
        public static final int glowpadview_margin_bottom=0x7f090074;
        public static final int glowpadview_margin_right=0x7f090075;
        /**  Size of alarm alert outer ring. 
 Size of alarm alert outer ring. 
         */
        public static final int glowpadview_outerring_diameter=0x7f09006f;
        /**  Default distance beyond which GlowPadView snaps to the matching target 
         */
        public static final int glowpadview_snap_margin=0x7f090072;
        /**  Default target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
 Default target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
         */
        public static final int glowpadview_target_placement_radius=0x7f090070;
        public static final int header_font_size=0x7f09003d;
        public static final int header_height=0x7f09008b;
        public static final int label_font_size=0x7f09003a;
        public static final int label_margin_big=0x7f09004d;
        public static final int label_margin_small=0x7f09004e;
        /**  Empty space at the edges of the lap button icon. Based off of 56dip width, only nonzero for tablets.
         */
        public static final int lap_button_padding=0x7f090069;
        public static final int left_side_width=0x7f0900a2;
        public static final int main_ampm_font_size=0x7f09003c;
        public static final int main_clock_padding=0x7f09004c;
        public static final int medium_font_padding=0x7f090046;
        public static final int medium_font_size=0x7f090039;
        public static final int medium_space_bottom=0x7f090049;
        public static final int medium_space_top=0x7f090048;
        public static final int min_digital_widget_height=0x7f09007c;
        public static final int min_digital_widget_resize_height=0x7f09007e;
        /**  same as min_digital_widget_{width,height} 
         */
        public static final int min_digital_widget_resize_width=0x7f09007d;
        /**  width/height of layout/digital_widget_time 
 height is sum of widget_big_font_size + label_font_size + margins 
         */
        public static final int min_digital_widget_width=0x7f09007b;
        public static final int min_lock=0x7f090002;
        public static final int min_swipe=0x7f090000;
        public static final int min_vert=0x7f090001;
        public static final int mini_time_margin_right=0x7f090009;
        public static final int minimum_margin_sides=0x7f09008d;
        public static final int minimum_margin_top_bottom=0x7f09008e;
        public static final int month_day_label_text_size=0x7f090096;
        public static final int month_label_size=0x7f09009d;
        public static final int month_list_item_header_height=0x7f090095;
        public static final int month_list_item_padding=0x7f0900a3;
        public static final int month_list_item_size=0x7f0900a4;
        public static final int month_select_circle_radius=0x7f090098;
        public static final int next_alarm_margin_top=0x7f090013;
        public static final int next_alarm_text_size=0x7f090006;
        public static final int no_alarms_font_size=0x7f090040;
        /**  The width of the big icons in notifications. 
         */
        public static final int notification_large_icon_height=0x7f09005f;
        /**  The width of the big icons in notifications. 
         */
        public static final int notification_large_icon_width=0x7f09005e;
        /**  Size of smaller notification text (see TextAppearance.StatusBar.EventContent.Line2, Info, Time) 
         */
        public static final int notification_subtext_size=0x7f090062;
        /**  Size of notification text (see TextAppearance.StatusBar.EventContent) 
         */
        public static final int notification_text_size=0x7f090060;
        /**  Size of notification text titles (see TextAppearance.StatusBar.EventContent.Title) 
         */
        public static final int notification_title_text_size=0x7f090061;
        public static final int picker_dimen=0x7f09008f;
        /**  Empty space at the edges of the +1 and reset button icons. Based off of 56dip width, only nonzero for tablets.
 Empty space at the edges of the +1 and reset button icons. Based off of 56dip width.
 Empty space at the edges of the +1 and reset button icons. Based off of 56dip width.
         */
        public static final int plusone_reset_button_padding=0x7f090067;
        public static final int popup_window_width=0x7f090016;
        public static final int screensaver_margin=0x7f090010;
        public static final int selected_calendar_layout_height=0x7f090092;
        public static final int selected_date_day_size=0x7f09009a;
        public static final int selected_date_month_size=0x7f09009b;
        public static final int selected_date_year_size=0x7f090099;
        public static final int separator_padding=0x7f09008a;
        /**  11 
 Empty space at the edges of the delete button icons. Based off of 56dip width, only nonzero for tablets. 
 Empty space at the edges of the delete button icons. Based off of 56dip width, only nonzero for tablets. 
 Empty space at the edges of the delete button icons. Based off of 56dip width, only nonzero for tablets. 
         */
        public static final int share_button_padding=0x7f09006a;
        public static final int small_ampm_margin_left=0x7f09000a;
        public static final int small_font_size=0x7f090038;
        public static final int small_space=0x7f090047;
        public static final int small_time_margin_right=0x7f090008;
        public static final int style_label_space=0x7f09004a;
        public static final int sw_item_space=0x7f09004b;
        public static final int sw_padding_end=0x7f09005d;
        public static final int time_label_right_padding=0x7f0900a5;
        public static final int time_label_size=0x7f090085;
        public static final int time_margin_bottom=0x7f09000c;
        public static final int time_margin_left=0x7f09000b;
        public static final int time_margin_right=0x7f090007;
        public static final int time_margin_top=0x7f09000d;
        public static final int time_text_size=0x7f090003;
        /**  16 
 Extra offset for timer button paddings. Only nonzero for non-tablets. 
 Extra offset for timer button paddings. Only nonzero for non-tablets. 
 Extra offset for timer button paddings. Only nonzero for non-tablets. 
 Extra offset for timer button paddings. Only nonzero for non-tablets. 
         */
        public static final int timer_button_extra_offset=0x7f09006b;
        public static final int timer_circle_diameter=0x7f090020;
        public static final int timer_circle_margin=0x7f09005c;
        public static final int timer_circle_width=0x7f090021;
        /**  Height of space between timers. 
         */
        public static final int timer_divider_height=0x7f09006e;
        public static final int timer_label_font_size=0x7f090043;
        public static final int timer_padding_left=0x7f09000f;
        public static final int timer_setup_button_size=0x7f090052;
        public static final int timer_setup_delete_padding=0x7f090054;
        /** margin should be ~ half timer_setup_font_size 
         */
        public static final int timer_setup_delete_start_margin=0x7f090053;
        public static final int timer_setup_font_size=0x7f090051;
        public static final int timer_setup_label_size=0x7f090055;
        public static final int toast_bar_bottom_margin_in_conversation=0x7f090066;
        public static final int top_text_spacing_digital=0x7f090018;
        public static final int widget_24_medium_font_size=0x7f090078;
        /**  Digital Widget settings (keyguard|home_screen) 
 Clock and world clock sizes 
 Digital Widget settings (keyguard|home_screen) 
 Use larger fonts 
         */
        public static final int widget_big_font_size=0x7f090076;
        /**  Hour and minute spacing 
         */
        public static final int widget_big_time_margin_right=0x7f090079;
        public static final int widget_label_font_size=0x7f09003b;
        public static final int widget_medium_font_size=0x7f090077;
        public static final int widget_medium_time_margin_right=0x7f09007a;
        /**  Size of analog clock in world clock. 
 Size of analog clock in world clock. 
         */
        public static final int world_clock_analog_size=0x7f090064;
        public static final int world_clock_margin=0x7f090065;
        public static final int year_label_height=0x7f09009f;
        public static final int year_label_text_size=0x7f0900a0;
    }
    public static final class drawable {
        public static final int ab_hairline=0x7f020000;
        public static final int activated_background_holo_dark=0x7f020001;
        public static final int add_alarm=0x7f020002;
        public static final int alarm_alert_fullscreen_bg=0x7f020003;
        public static final int alarm_background_normal=0x7f020004;
        public static final int alarm_tab=0x7f020005;
        public static final int appwidget_analog_clock_preview=0x7f020006;
        public static final int appwidget_clock_dial=0x7f020007;
        public static final int appwidget_clock_hour=0x7f020008;
        public static final int appwidget_clock_minute=0x7f020009;
        public static final int appwidget_clock_second=0x7f02000a;
        public static final int appwidget_digital_clock_preview=0x7f02000b;
        public static final int background_protector=0x7f02000c;
        public static final int btn_alarm_alert=0x7f02000d;
        public static final int btn_alarm_focused=0x7f02000e;
        public static final int btn_alarm_normal=0x7f02000f;
        public static final int btn_alarm_pressed=0x7f020010;
        public static final int btn_check_off_disabled_focused_holo_dark_red=0x7f020011;
        public static final int btn_check_off_disabled_focused_holo_light_red=0x7f020012;
        public static final int btn_check_off_disabled_holo_dark_red=0x7f020013;
        public static final int btn_check_off_disabled_holo_light_red=0x7f020014;
        public static final int btn_check_off_focused_holo_dark_red=0x7f020015;
        public static final int btn_check_off_focused_holo_light_red=0x7f020016;
        public static final int btn_check_off_holo_dark_red=0x7f020017;
        public static final int btn_check_off_holo_light_red=0x7f020018;
        public static final int btn_check_off_pressed_holo_dark_red=0x7f020019;
        public static final int btn_check_off_pressed_holo_light_red=0x7f02001a;
        public static final int btn_check_on_disabled_focused_holo_dark_red=0x7f02001b;
        public static final int btn_check_on_disabled_focused_holo_light_red=0x7f02001c;
        public static final int btn_check_on_disabled_holo_dark_red=0x7f02001d;
        public static final int btn_check_on_disabled_holo_light_red=0x7f02001e;
        public static final int btn_check_on_focused_holo_dark_red=0x7f02001f;
        public static final int btn_check_on_focused_holo_light_red=0x7f020020;
        public static final int btn_check_on_holo_dark_red=0x7f020021;
        public static final int btn_check_on_holo_light_red=0x7f020022;
        public static final int btn_check_on_pressed_holo_dark_red=0x7f020023;
        public static final int btn_check_on_pressed_holo_light_red=0x7f020024;
        public static final int btn_in_call_round_disable=0x7f020025;
        public static final int btn_in_call_round_disable_focused=0x7f020026;
        public static final int btn_in_call_round_normal=0x7f020027;
        public static final int btn_in_call_round_pressed=0x7f020028;
        public static final int btn_in_call_round_selected=0x7f020029;
        public static final int btn_strip_trans_left=0x7f02002a;
        public static final int btn_strip_trans_left_normal=0x7f02002b;
        public static final int btn_strip_trans_left_pressed=0x7f02002c;
        public static final int btn_strip_trans_left_selected=0x7f02002d;
        public static final int btn_strip_trans_middle=0x7f02002e;
        public static final int btn_strip_trans_middle_normal=0x7f02002f;
        public static final int btn_strip_trans_middle_pressed=0x7f020030;
        public static final int btn_strip_trans_middle_selected=0x7f020031;
        public static final int btn_strip_trans_right=0x7f020032;
        public static final int btn_strip_trans_right_normal=0x7f020033;
        public static final int btn_strip_trans_right_pressed=0x7f020034;
        public static final int btn_strip_trans_right_selected=0x7f020035;
        public static final int checkbox_radio_xxhdpi_red_14_red=0x7f020036;
        public static final int clock_analog_dial=0x7f020037;
        public static final int clock_analog_dial_mipmap=0x7f020038;
        public static final int clock_analog_hour=0x7f020039;
        public static final int clock_analog_hour_mipmap=0x7f02003a;
        public static final int clock_analog_minute=0x7f02003b;
        public static final int clock_analog_minute_mipmap=0x7f02003c;
        public static final int clock_analog_second=0x7f02003d;
        public static final int clock_analog_second_mipmap=0x7f02003e;
        public static final int clock_selector=0x7f02003f;
        public static final int clock_tab=0x7f020040;
        public static final int dialog=0x7f020041;
        public static final int dialog_divider_horizontal_light=0x7f020042;
        public static final int divider_vertical_dark=0x7f020043;
        public static final int done_background_color=0x7f020044;
        public static final int done_background_color_dark=0x7f020045;
        public static final int fastscroll_label_left_holo_dark=0x7f020046;
        public static final int fastscroll_label_right_holo_dark=0x7f020047;
        public static final int fastscroll_thumb_default_holo=0x7f020048;
        public static final int fastscroll_thumb_pressed_holo=0x7f020049;
        public static final int footer_bg=0x7f02004a;
        public static final int header_bg=0x7f02004b;
        public static final int header_bg_bar=0x7f02004c;
        public static final int ic_add=0x7f02004d;
        public static final int ic_alarm=0x7f02004e;
        public static final int ic_alarm_alert_dismiss=0x7f02004f;
        public static final int ic_alarm_alert_outerring=0x7f020050;
        public static final int ic_alarm_alert_snooze=0x7f020051;
        public static final int ic_alarm_alert_touch_handle=0x7f020052;
        public static final int ic_alarm_normal=0x7f020053;
        public static final int ic_alarm_small=0x7f020054;
        public static final int ic_backspace=0x7f020055;
        public static final int ic_backspace_disabled=0x7f020056;
        public static final int ic_backspace_normal=0x7f020057;
        public static final int ic_backspace_pressed=0x7f020058;
        public static final int ic_clock_add_alarm=0x7f020059;
        public static final int ic_clock_add_alarm_selected=0x7f02005a;
        public static final int ic_clock_alarm_off=0x7f02005b;
        public static final int ic_clock_alarm_on=0x7f02005c;
        public static final int ic_clock_alarm_selected=0x7f02005d;
        public static final int ic_clock_brightness=0x7f02005e;
        public static final int ic_clock_strip_alarm=0x7f02005f;
        public static final int ic_clock_strip_desk_clock=0x7f020060;
        public static final int ic_clock_strip_gallery=0x7f020061;
        public static final int ic_clock_strip_home=0x7f020062;
        public static final int ic_clock_strip_music=0x7f020063;
        public static final int ic_delete=0x7f020064;
        public static final int ic_delete_normal=0x7f020065;
        public static final int ic_delete_pressed=0x7f020066;
        public static final int ic_dialog_time=0x7f020067;
        public static final int ic_diamond_red=0x7f020068;
        public static final int ic_diamond_white=0x7f020069;
        public static final int ic_discard_holo_dark=0x7f02006a;
        public static final int ic_expand_down=0x7f02006b;
        public static final int ic_expand_up=0x7f02006c;
        public static final int ic_globe=0x7f02006d;
        public static final int ic_indicator_off=0x7f02006e;
        public static final int ic_indicator_on=0x7f02006f;
        public static final int ic_label=0x7f020070;
        public static final int ic_label_normal=0x7f020071;
        public static final int ic_label_pressed=0x7f020072;
        public static final int ic_label_small=0x7f020073;
        public static final int ic_lap=0x7f020074;
        public static final int ic_lap_disabled=0x7f020075;
        public static final int ic_lap_normal=0x7f020076;
        public static final int ic_lap_pressed=0x7f020077;
        public static final int ic_lapalternate=0x7f020078;
        public static final int ic_lapalternate_disabled=0x7f020079;
        public static final int ic_lapalternate_pressed=0x7f02007a;
        public static final int ic_location=0x7f02007b;
        public static final int ic_lock_idle_alarm=0x7f02007c;
        public static final int ic_lock_idle_alarm_saver=0x7f02007d;
        public static final int ic_lock_idle_alarm_saver_dim=0x7f02007e;
        public static final int ic_lockscreen_alarm=0x7f02007f;
        public static final int ic_lockscreen_glowdot=0x7f020080;
        public static final int ic_lockscreen_handle_pressed=0x7f020081;
        public static final int ic_lockscreen_snooze_activated=0x7f020082;
        public static final int ic_lockscreen_snooze_normal=0x7f020083;
        public static final int ic_lockscreen_wakeup_activated=0x7f020084;
        public static final int ic_lockscreen_wakeup_normal=0x7f020085;
        public static final int ic_menu_add=0x7f020086;
        public static final int ic_menu_alarms=0x7f020087;
        public static final int ic_menu_clock_face=0x7f020088;
        public static final int ic_menu_desk_clock=0x7f020089;
        public static final int ic_menu_done_holo_dark=0x7f02008a;
        public static final int ic_menu_revert_holo_dark=0x7f02008b;
        public static final int ic_noalarms=0x7f02008c;
        public static final int ic_notify_lap=0x7f02008d;
        public static final int ic_notify_reset=0x7f02008e;
        public static final int ic_notify_start=0x7f02008f;
        public static final int ic_notify_stop=0x7f020090;
        public static final int ic_plusone=0x7f020091;
        public static final int ic_plusone_disabled=0x7f020092;
        public static final int ic_plusone_normal=0x7f020093;
        public static final int ic_plusone_pressed=0x7f020094;
        public static final int ic_reset=0x7f020095;
        public static final int ic_reset_normal=0x7f020096;
        public static final int ic_reset_pressed=0x7f020097;
        public static final int ic_ringtone=0x7f020098;
        public static final int ic_round_brightness=0x7f020099;
        public static final int ic_setalarm_holo_dark=0x7f02009a;
        public static final int ic_share=0x7f02009b;
        public static final int ic_share_normal=0x7f02009c;
        public static final int ic_share_pressed=0x7f02009d;
        public static final int ic_start_disabled=0x7f02009e;
        public static final int ic_start_normal=0x7f02009f;
        public static final int ic_stop_normal=0x7f0200a0;
        public static final int ic_tab_clock=0x7f0200a1;
        public static final int ic_tab_clock_activated=0x7f0200a2;
        public static final int ic_tab_clock_normal=0x7f0200a3;
        public static final int ic_tab_stopwatch=0x7f0200a4;
        public static final int ic_tab_stopwatch_activated=0x7f0200a5;
        public static final int ic_tab_stopwatch_normal=0x7f0200a6;
        public static final int ic_tab_timer=0x7f0200a7;
        public static final int ic_tab_timer_activated=0x7f0200a8;
        public static final int ic_tab_timer_normal=0x7f0200a9;
        public static final int ic_x_normal=0x7f0200aa;
        public static final int incall_round_button=0x7f0200ab;
        public static final int indicator_bar_onoff=0x7f0200ac;
        public static final int indicator_clock_onoff=0x7f0200ad;
        public static final int item_background=0x7f0200ae;
        public static final int list_activated_holo=0x7f0200af;
        public static final int list_selector_background_pressed=0x7f0200b0;
        public static final int main_button_normal=0x7f0200b1;
        public static final int main_button_red=0x7f0200b2;
        public static final int notification_bg=0x7f0200b3;
        public static final int notification_bg_normal=0x7f0200b4;
        public static final int notification_bg_normal_pressed=0x7f0200b5;
        public static final int notification_template_icon_bg=0x7f0200c1;
        public static final int notification_template_icon_low_bg=0x7f0200c2;
        public static final int panel_undo_holo=0x7f0200b6;
        public static final int red_checkbox=0x7f0200b7;
        public static final int red_fastscroll_thumb=0x7f0200b8;
        public static final int stat_notify_alarm=0x7f0200b9;
        public static final int stat_notify_stopwatch=0x7f0200ba;
        public static final int stat_notify_timer=0x7f0200bb;
        public static final int stopwatch_tab=0x7f0200bc;
        public static final int timer_tab=0x7f0200bd;
        public static final int toggle_underline=0x7f0200be;
        public static final int toggle_underline_activated=0x7f0200bf;
        public static final int toggle_underline_normal=0x7f0200c0;
    }
    public static final class id {
        public static final int action_button=0x7f0e0003;
        public static final int action_icon=0x7f0e0005;
        public static final int action_text=0x7f0e0006;
        public static final int alarm_add_alarm=0x7f0e0011;
        public static final int alarm_clock_left=0x7f0e000a;
        public static final int alarm_delete=0x7f0e0051;
        public static final int alarm_footer_filler=0x7f0e0025;
        public static final int alarm_item=0x7f0e0016;
        public static final int alarm_layout=0x7f0e0013;
        public static final int alarm_revert=0x7f0e0050;
        public static final int alarm_save=0x7f0e0052;
        public static final int alarm_timeline_scroll_view=0x7f0e0027;
        public static final int alarm_timeline_title=0x7f0e0026;
        public static final int alarm_timeline_view=0x7f0e0028;
        public static final int alarms_empty_view=0x7f0e000d;
        public static final int alarms_footer_view=0x7f0e0010;
        public static final int alarms_list=0x7f0e000c;
        public static final int alertTitle=0x7f0e0007;
        public static final int ampm_hitspace=0x7f0e0071;
        public static final int ampm_label=0x7f0e0072;
        public static final int analog_appwidget=0x7f0e0029;
        public static final int analog_clock=0x7f0e0040;
        public static final int animator=0x7f0e003d;
        public static final int arrow=0x7f0e0021;
        public static final int cancelButton=0x7f0e0047;
        public static final int center_view=0x7f0e006c;
        public static final int choose_ringtone=0x7f0e001e;
        public static final int cities=0x7f0e0031;
        public static final int cities_button=0x7f0e0032;
        public static final int cities_list=0x7f0e002a;
        public static final int city_day=0x7f0e0097;
        public static final int city_day_left=0x7f0e009d;
        public static final int city_day_right=0x7f0e00a0;
        public static final int city_left=0x7f0e0098;
        public static final int city_name=0x7f0e002e;
        public static final int city_name_layout=0x7f0e0096;
        public static final int city_name_left=0x7f0e009c;
        public static final int city_name_right=0x7f0e009f;
        public static final int city_onoff=0x7f0e002c;
        public static final int city_remove=0x7f0e0030;
        public static final int city_right=0x7f0e0099;
        public static final int city_selected_icon=0x7f0e002d;
        public static final int city_spacer=0x7f0e00a1;
        public static final int city_time=0x7f0e002f;
        public static final int collapse_expand=0x7f0e0020;
        public static final int date=0x7f0e0041;
        public static final int date_picker_day=0x7f0e003b;
        public static final int date_picker_header=0x7f0e0037;
        public static final int date_picker_month=0x7f0e003a;
        public static final int date_picker_month_and_day=0x7f0e0039;
        public static final int date_picker_year=0x7f0e003c;
        public static final int day_picker_selected_date_layout=0x7f0e0038;
        public static final int daysOfWeek=0x7f0e0024;
        public static final int delete=0x7f0e0019;
        public static final int delete_alarm=0x7f0e00aa;
        public static final int description_icon=0x7f0e0001;
        public static final int description_text=0x7f0e0002;
        public static final int desk_clock_pager=0x7f0e003e;
        public static final int digitalClock=0x7f0e0008;
        public static final int digital_appwidget=0x7f0e0043;
        public static final int digital_appwidget_listview=0x7f0e0044;
        public static final int digital_clock=0x7f0e0017;
        public static final int done=0x7f0e0036;
        public static final int done_button=0x7f0e0077;
        public static final int edit_alarm=0x7f0e00a9;
        public static final int edit_label=0x7f0e001b;
        public static final int enable_alarm=0x7f0e00a8;
        public static final int end_space=0x7f0e005c;
        public static final int expand_area=0x7f0e001a;
        public static final int first=0x7f0e0079;
        public static final int fourth=0x7f0e007c;
        public static final int fragment_container=0x7f0e0081;
        public static final int glow_pad_view=0x7f0e0009;
        public static final int hairline=0x7f0e0022;
        public static final int header=0x7f0e002b;
        public static final int header_label=0x7f0e0035;
        public static final int header_time=0x7f0e0034;
        public static final int hour_space=0x7f0e006d;
        public static final int hours=0x7f0e006e;
        public static final int hours_label=0x7f0e0088;
        public static final int hours_ones=0x7f0e0087;
        public static final int icon=0x7f0e004e;
        public static final int key_left=0x7f0e0068;
        public static final int key_middle=0x7f0e0069;
        public static final int key_right=0x7f0e006a;
        public static final int label=0x7f0e0015;
        public static final int labelBox=0x7f0e0046;
        public static final int lap_number=0x7f0e0049;
        public static final int lap_time=0x7f0e004a;
        public static final int lap_total=0x7f0e004b;
        public static final int laps_list=0x7f0e005d;
        public static final int left_clock=0x7f0e009b;
        public static final int line=0x7f0e0076;
        public static final int line1=0x7f0e0060;
        public static final int list_item=0x7f0e004d;
        public static final int main=0x7f0e000b;
        public static final int main_clock=0x7f0e003f;
        public static final int main_clock_frame=0x7f0e004c;
        public static final int main_clock_left_pane=0x7f0e0033;
        public static final int menu_button=0x7f0e0012;
        public static final int menu_delete=0x7f0e00ad;
        public static final int menu_item_delete_alarm=0x7f0e00a3;
        public static final int menu_item_help=0x7f0e00a7;
        public static final int menu_item_night_mode=0x7f0e00ac;
        public static final int menu_item_search=0x7f0e00a4;
        public static final int menu_item_settings=0x7f0e00a6;
        public static final int menu_item_sort=0x7f0e00a5;
        public static final int menu_items=0x7f0e00ab;
        public static final int minutes=0x7f0e0070;
        public static final int minutes_label=0x7f0e008b;
        public static final int minutes_ones=0x7f0e008a;
        public static final int minutes_picker=0x7f0e0054;
        public static final int minutes_space=0x7f0e006f;
        public static final int minutes_tens=0x7f0e0089;
        public static final int month_text_view=0x7f0e00a2;
        public static final int nextAlarm=0x7f0e0042;
        public static final int notification_icon=0x7f0e005f;
        public static final int numbers_key=0x7f0e0000;
        public static final int onoff=0x7f0e0018;
        public static final int repeat_days=0x7f0e001d;
        public static final int repeat_onoff=0x7f0e001c;
        public static final int right_clock=0x7f0e009e;
        public static final int save_menu_item=0x7f0e0053;
        public static final int second=0x7f0e007a;
        public static final int seconds=0x7f0e008c;
        public static final int seconds_label=0x7f0e008d;
        public static final int separator=0x7f0e0004;
        public static final int setButton=0x7f0e0048;
        public static final int start_space=0x7f0e0055;
        public static final int stopwatch_circle=0x7f0e0056;
        public static final int stopwatch_left_button=0x7f0e0059;
        public static final int stopwatch_share_button=0x7f0e005b;
        public static final int stopwatch_stop=0x7f0e005a;
        public static final int stopwatch_time=0x7f0e0058;
        public static final int stopwatch_time_text=0x7f0e0057;
        public static final int summary=0x7f0e0023;
        public static final int swn_collapsed_chronometer=0x7f0e0061;
        public static final int swn_collapsed_hitspace=0x7f0e005e;
        public static final int swn_collapsed_laps=0x7f0e0062;
        public static final int swn_expanded_chronometer=0x7f0e0064;
        public static final int swn_expanded_hitspace=0x7f0e0063;
        public static final int swn_expanded_laps=0x7f0e0065;
        public static final int swn_left_button=0x7f0e0066;
        public static final int swn_right_button=0x7f0e0067;
        public static final int the_clock=0x7f0e0045;
        public static final int third=0x7f0e007b;
        public static final int time_display=0x7f0e006b;
        public static final int time_display_background=0x7f0e0074;
        public static final int time_picker=0x7f0e0075;
        public static final int time_picker_dialog=0x7f0e0073;
        public static final int timeline_layout=0x7f0e0014;
        public static final int timer_add_timer=0x7f0e0085;
        public static final int timer_button_sep=0x7f0e007e;
        public static final int timer_cancel=0x7f0e007d;
        public static final int timer_circle=0x7f0e008e;
        public static final int timer_delete=0x7f0e0095;
        public static final int timer_footer=0x7f0e0084;
        public static final int timer_label=0x7f0e0090;
        public static final int timer_label_icon=0x7f0e0092;
        public static final int timer_label_text=0x7f0e0091;
        public static final int timer_plus_one=0x7f0e0093;
        public static final int timer_setup=0x7f0e0086;
        public static final int timer_start=0x7f0e007f;
        public static final int timer_stop=0x7f0e0094;
        public static final int timer_time=0x7f0e008f;
        public static final int timer_time_display=0x7f0e0080;
        public static final int timer_time_text=0x7f0e0078;
        public static final int timers_list=0x7f0e0083;
        public static final int timers_list_page=0x7f0e0082;
        public static final int title=0x7f0e004f;
        public static final int undo_bar=0x7f0e000f;
        public static final int undo_frame=0x7f0e000e;
        public static final int vibrate_onoff=0x7f0e001f;
        public static final int widget_item=0x7f0e009a;
    }
    public static final class integer {
        /**  Total clocks per row is 2 + world_clocks_per_row. 
 Total clocks per row is 2 + world_clocks_per_row. 
 Total clocks per row is 2 + world_clocks_per_row. 
         */
        public static final int clocks_per_row=0x7f08000c;
        public static final int dim_animation_duration=0x7f080009;
        public static final int dismiss_animation_duration=0x7f080006;
        public static final int escape_animation_duration=0x7f080002;
        /** 
    <integer name="activity_slide_left_duration">475</integer>
    <integer name="activity_slide_right_duration">525</integer>
    <integer name="activity_collapse_duration">125</integer>
    <integer name="expand_cc_bcc_dur">150</integer>
    <integer name="fadein_cc_bcc_dur">150</integer>

    <integer name="dialog_animationDefaultDur">220</integer>
    <integer name="dialog_animationShortDur">150</integer>
    <integer name="shrink_animation_duration">350</integer>
    <integer name="slide_animation_duration">320</integer>
    <integer name="fade_in_animation_duration">350</integer>
    
         */
        public static final int fade_duration=0x7f080000;
        public static final int hide_animation_duration=0x7f080008;
        public static final int max_dismiss_velocity=0x7f080004;
        public static final int max_escape_animation_duration=0x7f080003;
        public static final int snap_animation_duration=0x7f080005;
        /**  Swipe constants 
         */
        public static final int swipe_escape_velocity=0x7f080001;
        public static final int swipe_scroll_slop=0x7f080007;
        public static final int timer_column_count=0x7f08000a;
        /**  Number of world clocks in a row, for the clock tab. 
 Number of world clocks in a row, for the clock tab. 
 Number of world clocks in a row, for the clock tab. 
         */
        public static final int world_clocks_per_row=0x7f08000b;
    }
    public static final class layout {
        public static final int actionable_toast_row=0x7f040000;
        public static final int alarm_alert=0x7f040001;
        public static final int alarm_alert_fullscreen=0x7f040002;
        public static final int alarm_clock=0x7f040003;
        public static final int alarm_label=0x7f040004;
        public static final int alarm_time=0x7f040005;
        public static final int alarm_timeline_layout=0x7f040006;
        public static final int analog_appwidget=0x7f040007;
        public static final int blank_footer_view=0x7f040008;
        public static final int blank_header_view=0x7f040009;
        public static final int cities_activity=0x7f04000a;
        public static final int city_list_header=0x7f04000b;
        public static final int city_list_item=0x7f04000c;
        public static final int clock_fragment=0x7f04000d;
        public static final int context_menu_header=0x7f04000e;
        public static final int date_picker_dialog=0x7f04000f;
        public static final int date_picker_done_button=0x7f040010;
        public static final int date_picker_header_view=0x7f040011;
        public static final int date_picker_selected_date=0x7f040012;
        public static final int date_picker_view_animator=0x7f040013;
        public static final int day_button=0x7f040014;
        public static final int desk_clock=0x7f040015;
        public static final int desk_clock_saver=0x7f040016;
        public static final int digital_appwidget=0x7f040017;
        public static final int digital_widget_time=0x7f040018;
        public static final int glow_pad_view=0x7f040019;
        public static final int item_background=0x7f04001a;
        public static final int label_dialog=0x7f04001b;
        public static final int lap_view=0x7f04001c;
        public static final int main_clock_frame=0x7f04001d;
        public static final int popup_window_item=0x7f04001e;
        public static final int set_alarm=0x7f04001f;
        public static final int set_alarm_action_bar=0x7f040020;
        public static final int snooze_length_picker=0x7f040021;
        public static final int stopwatch_fragment=0x7f040022;
        public static final int stopwatch_notif_collapsed=0x7f040023;
        public static final int stopwatch_notif_expanded=0x7f040024;
        public static final int three_keys_view=0x7f040025;
        public static final int time_header_label=0x7f040026;
        public static final int time_picker_dialog=0x7f040027;
        public static final int time_setup_view=0x7f040028;
        public static final int timer_alert_full_screen=0x7f040029;
        public static final int timer_fragment=0x7f04002a;
        public static final int timer_h_mm_ss_view=0x7f04002b;
        public static final int timer_list_item=0x7f04002c;
        public static final int world_clock_item=0x7f04002d;
        public static final int world_clock_label=0x7f04002e;
        public static final int world_clock_list_item=0x7f04002f;
        public static final int world_clock_remote_list_item=0x7f040030;
        public static final int year_label_text_view=0x7f040031;
    }
    public static final class menu {
        public static final int alarm_cab_menu=0x7f110000;
        public static final int cities_menu=0x7f110001;
        public static final int context_menu=0x7f110002;
        public static final int desk_clock_menu=0x7f110003;
        public static final int set_alarm_context=0x7f110004;
        public static final int settings_menu=0x7f110005;
    }
    public static final class mipmap {
        public static final int ic_launcher_alarmclock=0x7f030000;
        public static final int ic_widget_analog_clock=0x7f030001;
    }
    public static final class plurals {
        /**  Stopwatch accessibility strings 
         */
        public static final int Nhours_description=0x7f0f0003;
        public static final int Nminutes_description=0x7f0f0004;
        public static final int Nseconds_description=0x7f0f0005;
        /**  Toast that appears after Alarm is snoozed from the Alarm
         dialog. Says the alarm will snooze for xxx minutes.  
         */
        public static final int alarm_alert_snooze_set=0x7f0f0000;
        /**  Alarm deletion confirmation message
         */
        public static final int alarm_delete_confirmation=0x7f0f0007;
        public static final int snooze_duration=0x7f0f0001;
        public static final int snooze_picker_label=0x7f0f0002;
        public static final int timers_num=0x7f0f0006;
    }
    public static final class raw {
        public static final int fallbackring=0x7f070000;
        public static final int in_call_alarm=0x7f070001;
    }
    public static final class string {
        /**  String matching the lock screen format for displaying the date. 
         */
        public static final int abbrev_wday_month_day_no_year=0x7f0d0000;
        /**  Menu item on Alarm Clock screen: Add alarm 
         */
        public static final int add_alarm=0x7f0d0005;
        public static final int alarm_alert_alert_silenced=0x7f0d00a6;
        /**  Button labels on the pre-dismiss alarm notifications: Dismiss now 
         */
        public static final int alarm_alert_dismiss_now_text=0x7f0d0018;
        /**  Button labels on the alarm dialog: Dismiss 
         */
        public static final int alarm_alert_dismiss_text=0x7f0d0017;
        /**  Text to appear in the notification title while an alarm is about to go off. 
         */
        public static final int alarm_alert_predismiss_title=0x7f0d001d;
        public static final int alarm_alert_snooze_set=0x7f0d00a7;
        /**  Button labels on the alarm dialog: Snooze 
         */
        public static final int alarm_alert_snooze_text=0x7f0d001b;
        /**  Text to appear inside a notification while an alarm is snoozing. 
 no translation found for alarm_alert_snooze_set:one (7884410398338611019) 
 no translation found for alarm_alert_snooze_set:other (7377899473014259727) 
         */
        public static final int alarm_alert_snooze_until=0x7f0d001c;
        public static final int alarm_button_description=0x7f0d003b;
        /**  Toast content when an alarm was deleted  
         */
        public static final int alarm_deleted=0x7f0d0094;
        /**  A description for the DeskClock alarm sound playback service.
         [CHAR LIMIT=NONE] 
         */
        public static final int alarm_klaxon_service_desc=0x7f0d0045;
        /**  Title for AlarmClock activity 
 Label for the Alarms activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int alarm_list_title=0x7f0d0004;
        public static final int alarm_missed_text=0x7f0d001a;
        /**  Alarm Alert screen: this message is shown after an alarm rung
         unattended for a number of minutes.  It tells the user that
         the alarm has been silenced.
         */
        public static final int alarm_missed_title=0x7f0d0019;
        /**  Text to display in the notification ticker and label 
         */
        public static final int alarm_notify_snooze_label=0x7f0d0036;
        /**  Text to display in the notification when the alarm has been snoozed 
         */
        public static final int alarm_notify_snooze_text=0x7f0d0037;
        /**  Text to display in the small text of the notification 
         */
        public static final int alarm_notify_text=0x7f0d0035;
        /**  Setting labels on Set alarm screen: Repeat 
         */
        public static final int alarm_repeat=0x7f0d0013;
        /**  Header in the preferences settings for the section pertaining to alarms 
 no translation found for timezone_labels:84 (5176858645450908751) 
         */
        public static final int alarm_settings=0x7f0d0080;
        /**  Font size for AM/PM should match alarm_label_size 
 Font size for AM/PM should match alarm_label_size 
         */
        public static final int alarm_time_12_hours_format=0x7f0d00a3;
        /**  Title text for alarm timeline view [CHAR LIMIT=20] 
         */
        public static final int alarm_timeline_title_text=0x7f0d0006;
        /**  Description of the button to undo change to alarm 
         */
        public static final int alarm_undo=0x7f0d0093;
        /**  Setting labels on Set alarm screen: Vibration on or off 
         */
        public static final int alarm_vibrate=0x7f0d0012;
        /**  Setting title for changing the alarm volume. 
         */
        public static final int alarm_volume_title=0x7f0d0033;
        /**  Displays the number of alarms selected from the list of alarms. 
         */
        public static final int alarms_selected=0x7f0d0099;
        /**  Setting labels on Set alarm screen: Select alarm ringtone  
         */
        public static final int alert=0x7f0d0014;
        /**  Notification text when multiple timers are stopped. 
         */
        public static final int all_timers_stopped_notif=0x7f0d008b;
        public static final int ampm_circle_radius_multiplier=0x7f0d00ab;
        /**  Label for analog clock gadget displayed on-screen when that gadget is represented to the user. 
         */
        public static final int analog_gadget=0x7f0d0029;
        /**  
 Label shown on launcher icon 
 Label for the this application displayed on-screen when this application must be represented to the user. 
         */
        public static final int app_label=0x7f0d0003;
        /**  Auto silence summary when turned off 
         */
        public static final int auto_silence_never=0x7f0d002f;
        /**  Auto silence summary string set based on the preference value. 
         */
        public static final int auto_silence_summary=0x7f0d002e;
        /**  Auto silence preference title 
         */
        public static final int auto_silence_title=0x7f0d002d;
        /**  Title for an option that will automtically show a clock representing the user's regular timezone on the main fragment whenever the user leaves their regular timezone
         */
        public static final int automatic_home_clock=0x7f0d0076;
        /**  Describes the functionality provided by the automatic_home_clock option 
         */
        public static final int automatic_home_clock_summary=0x7f0d0077;
        /**  A short representation of charging information, e.g "34%" 
         */
        public static final int battery_charging_level=0x7f0d0043;
        /** - Clock view buttons strings
 Describes the purpose of the button to start the activity to add/edit/delete alarms 
         */
        public static final int button_alarms=0x7f0d004e;
        /**  Describes the purpose of the button which provides a list of cities for the world clock settings 
         */
        public static final int button_cities=0x7f0d004f;
        /**  Describes the purpose of the button which pops up a menu of setting choices 
         */
        public static final int button_menu=0x7f0d0050;
        public static final int circle_radius_multiplier=0x7f0d00a8;
        public static final int circle_radius_multiplier_24HourMode=0x7f0d00a9;
        /**  Label for the Cities activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int cities_activity_title=0x7f0d0073;
        /**  world clock deletion confirmation 
         */
        public static final int city_delete_confirmation=0x7f0d009c;
        /**  format strings for clocks 
         */
        public static final int clock_24_hours_format=0x7f0d009e;
        /**  Appears at the top of the Clock Picker screen: Tell user to
         select a clock to display 
         */
        public static final int clock_instructions=0x7f0d0028;
        /**  Settings strings 
 Header in the preferences settings for the section pertaining to clocks on the main fragment 
         */
        public static final int clock_settings=0x7f0d0074;
        /**  Header for a Clock Dream Setting referring to choosing analog or digital style 
         */
        public static final int clock_style=0x7f0d0075;
        /**  Description of the up caret in the alarm alert screen to collapse the alarm content to summary perspective. [CHAR LIMIT=NONE] 
         */
        public static final int collapse_alarm=0x7f0d0092;
        /**  Label on the main screen control used to set alarm [CHAR LIMIT=30]
         */
        public static final int control_set_alarm=0x7f0d0048;
        /**  Label on the main screen control used to set alarm when there is already an existing alarm [CHAR LIMIT=30]
         */
        public static final int control_set_alarm_with_existing=0x7f0d0049;
        /**  Alarm confirmation toast: singular day 
 no translation found for timer_notifications:0 (7760558912503484257) 
 no translation found for timer_notifications:1 (83197792732433351) 
 no translation found for timer_notifications:2 (8919698220200894252) 
 no translation found for timer_notifications:3 (8458069283817013813) 
 no translation found for alarm_set:0 (6450913786084215050) 
 no translation found for alarm_set:1 (6002066367368421848) 
 no translation found for alarm_set:2 (8824719306247973774) 
 no translation found for alarm_set:3 (8182406852935468862) 
 no translation found for alarm_set:4 (2532279224777213194) 
 no translation found for alarm_set:5 (5936557894247187717) 
 no translation found for alarm_set:6 (9115697840826129603) 
 no translation found for alarm_set:7 (2332583385137381060) 
         */
        public static final int day=0x7f0d001f;
        /**  Repeat options that appear under an alarm on main Alarm Clock
         screen to identify repetition schedule: concatenate days with
         this character, i.e. "Mon, Tue, Wed" 
         */
        public static final int day_concat=0x7f0d0027;
        /**  DO NOT TRANSLATE 
 DO NOT TRANSLATE 
         */
        public static final int day_of_week_label_typeface=0x7f0d00c1;
        /** 
        Content description for the month and day selector in the date picker, which displays
        a selectable grid of days laid out by month.
        [CHAR LIMIT=50]
     
         */
        public static final int day_picker_description=0x7f0d00b7;
        /**  Alarm confirmation toast: plural days 
         */
        public static final int days=0x7f0d0020;
        /**  Default clock style. 
         */
        public static final int default_clock_style=0x7f0d0002;
        /**  Default label to display for an alarm 
         */
        public static final int default_label=0x7f0d0010;
        /**  Title of the ringtone setting. 
 no translation found for volume_button_setting_entries:0 (7972756698723318690) 
 no translation found for volume_button_setting_entries:1 (3450979320164769576) 
 no translation found for volume_button_setting_entries:2 (6302517608411378024) 
         */
        public static final int default_ringtone_setting_title=0x7f0d003a;
        /**  Delete button when editing an alarm. 
         */
        public static final int delete=0x7f0d0032;
        /**  Context Menu Item on Alarm Settings screen: Delete alarm 
         */
        public static final int delete_alarm=0x7f0d0009;
        /**  Delete alarm confirmation dialog message. 
         */
        public static final int delete_alarm_confirm=0x7f0d000c;
        /**  Accessibility announcement when a number that had been typed in is deleted [CHAR_LIMIT=NONE] 
         */
        public static final int deleted_key=0x7f0d00bc;
        /**  message used by the talkback accessebility app to say that something was deleted 
         */
        public static final int deleted_message=0x7f0d009a;
        /**  Description of the down direction in the alarm alert screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_down=0x7f0d0088;
        /**  Description of the left direction in the alarm alert screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_left=0x7f0d0086;
        /**  Description of the right direction in the alarm alert screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_right=0x7f0d0085;
        /**  Description of the up direction in the alarm alert screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_up=0x7f0d0087;
        public static final int desk_clock_button_description=0x7f0d0040;
        public static final int desk_clock_help_url=0x7f0d0082;
        /**  Label for digital clock gadget displayed on-screen when that gadget is represented to the user. 
         */
        public static final int digital_gadget=0x7f0d009d;
        /**  Context Menu Item on Alarm Settings screen: Disable alarm 
         */
        public static final int disable_alarm=0x7f0d000b;
        /**  Done button when editing an alarm. 
 no translation found for auto_silence_entries:0 (3693401222993867634) 
 no translation found for auto_silence_entries:1 (3663730603519549990) 
 no translation found for auto_silence_entries:2 (1385481095199681200) 
 no translation found for auto_silence_entries:3 (420479821767342125) 
 no translation found for auto_silence_entries:4 (2107936130151066746) 
 no translation found for auto_silence_entries:5 (7219791437023378544) 
 no translation found for auto_silence_entries:6 (4278641338024561333) 
         */
        public static final int done=0x7f0d0030;
        /**  Label for button to confirm chosen date or time [CHAR LIMIT=30] 
         */
        public static final int done_label=0x7f0d00b2;
        /**  Context Menu Item on Alarm Settings screen: Enable alarm 
         */
        public static final int enable_alarm=0x7f0d000a;
        /**  Repeat options that appear under an alarm on main Alarm Clock
         screen to identify repetition schedule: special case for when
         the alarm is set to repeat every day 
         */
        public static final int every_day=0x7f0d0025;
        /**  Description of the down caret in the alarm alert screen to expand the alarm content to edit perspective. [CHAR LIMIT=NONE] 
         */
        public static final int expand_alarm=0x7f0d0091;
        /**  Format for describing the date, for accessibility. 
         */
        public static final int full_wday_month_day_no_year=0x7f0d0001;
        public static final int gallery_button_description=0x7f0d003c;
        /**  Help activity name 
         */
        public static final int help=0x7f0d002a;
        /**  Menu item on Alarm Clock screen: Hide clock 
         */
        public static final int hide_clock=0x7f0d000e;
        public static final int home_button_description=0x7f0d003f;
        /**  Title with the clock on the main page displaying the user's regular timezone (shows when automatic_home_clock enabled) 
         */
        public static final int home_label=0x7f0d0072;
        /**  Title in the preferences change the time zone for the user's home 
         */
        public static final int home_time_zone=0x7f0d0078;
        /**  Title in a list dialog box to pick a time zone for the user's home 
         */
        public static final int home_time_zone_title=0x7f0d0079;
        /**  Alarm confirmation toast: singular hour 
         */
        public static final int hour=0x7f0d0021;
        /** 
         Content description for the hour selector in the time picker, which displays
         selectable hours of the day along the inside edge of a circle, as in an analog clock.
         [CHAR LIMIT=50]
    
         */
        public static final int hour_picker_description=0x7f0d00b3;
        /**  Alarm confirmation toast: plural hours 
         */
        public static final int hours=0x7f0d0022;
        /**  Abbreviation for temporal hours [CHAR LIMIT=1] 
         */
        public static final int hours_label=0x7f0d005d;
        /**  Accessibility strings 
         */
        public static final int hours_label_description=0x7f0d0060;
        /**  Accessibility description for the item that is currently selected. 
         */
        public static final int item_is_selected=0x7f0d00bb;
        /**  Setting label on Set alarm screen: Label 
         */
        public static final int label=0x7f0d000f;
        /**  Accessibility labels for alarm buttons 
         */
        public static final int label_description=0x7f0d0041;
        public static final int label_unlabeled=0x7f0d0098;
        /**  String displayed as the alert summary while loading the alert name from
         the media player. [CHAR LIMIT=NONE] 
         */
        public static final int loading_ringtone=0x7f0d0046;
        /**  Font size for AM/PM should match bottom_text_size 
 format strings for clocks 
 Font size for AM/PM should match bottom_text_size 
         */
        public static final int main_clock_12_hours_format=0x7f0d00a1;
        public static final int main_widget_12_hours_format=0x7f0d009f;
        /**   ActionBar strings 
 Describes the purpose of the tab button which which switches the activity to the Alarm page 
         */
        public static final int menu_alarm=0x7f0d004a;
        /**  Describes the purpose of the tab button which which switches the activity to the Clock page 
         */
        public static final int menu_clock=0x7f0d004c;
        /**  Menu item on Alarm Clock screen: Desk clock 
         */
        public static final int menu_desk_clock=0x7f0d0007;
        /**  Menu item on Alarm Clock screen: Edit alarm 
         */
        public static final int menu_edit_alarm=0x7f0d0008;
        /**  Menu item on most screens to get to the help information 
         */
        public static final int menu_item_help=0x7f0d0052;
        /**  Menu item on clock screen to enter night mode. 
         */
        public static final int menu_item_night_mode=0x7f0d0053;
        /**  Menu item on most screens to get to more settings 
         */
        public static final int menu_item_settings=0x7f0d0051;
        /**  Menu item on Cities screen to sort by GMT offset 
         */
        public static final int menu_item_sort_by_gmt_offset=0x7f0d0054;
        /**  Menu item on Cities screen to sort by alphabetical order 
         */
        public static final int menu_item_sort_by_name=0x7f0d0055;
        /**  Describes the purpose of the tab button which which switches the activity to the Stopwatch page 
         */
        public static final int menu_stopwatch=0x7f0d004d;
        /**  Describes the purpose of the tab button which which switches the activity to the Timer page 
         */
        public static final int menu_timer=0x7f0d004b;
        /**  Alarm confirmation toast: singular minute  
         */
        public static final int minute=0x7f0d0023;
        /** 
         Content description for the minute selector in the time picker, which displays
         selectable five-minute intervals along the inside edge of a circle, as in an analog clock.
         [CHAR LIMIT=50]
    
         */
        public static final int minute_picker_description=0x7f0d00b4;
        /**  Alarm confirmation toast: plural minutes  
         */
        public static final int minutes=0x7f0d0024;
        /**  Abbreviation for temporal minutes [CHAR LIMIT=1] 
         */
        public static final int minutes_label=0x7f0d005e;
        public static final int minutes_label_description=0x7f0d0061;
        /**  Text to appear in when trying to view a missed alarm that has been deleted 
         */
        public static final int missed_alarm_has_been_deleted=0x7f0d001e;
        public static final int music_button_description=0x7f0d003d;
        /**  Repeat options that appear under an alarm on main Alarm Clock
         screen to identify repetition schedule: special case for when
         the alarm is set to never repeat 
         */
        public static final int never=0x7f0d0026;
        /**  Description of field showing the next alarm time in the clock page, for accessibility. 
         */
        public static final int next_alarm_description=0x7f0d0097;
        /**  Notification text when at least one timer, of those in use, is counting down. 
         */
        public static final int next_timer_notif=0x7f0d008d;
        /**  Describes intensity of display diminuation during dream mode 
         */
        public static final int night_mode_summary=0x7f0d0090;
        /**  Title for check box to pick intensity of display diminuation during dream mode 
         */
        public static final int night_mode_title=0x7f0d008f;
        public static final int nightmode_button_description=0x7f0d003e;
        /**  String for no alarms 
         */
        public static final int no_alarms=0x7f0d00a4;
        /**  String for no enabled alarms in timeline view [CHAR LIMIT=30] 
         */
        public static final int no_upcoming_alarms=0x7f0d00a5;
        public static final int numbers_radius_multiplier_inner=0x7f0d00ad;
        public static final int numbers_radius_multiplier_normal=0x7f0d00ac;
        public static final int numbers_radius_multiplier_outer=0x7f0d00ae;
        /**  DO NOT TRANSLATE 
         */
        public static final int radial_numbers_typeface=0x7f0d00bf;
        /**  Revert button when editing an alarm. 
         */
        public static final int revert=0x7f0d0031;
        /**  Label on expanded alarm edit view. 
         */
        public static final int ringtone=0x7f0d0015;
        public static final int ringtone_description=0x7f0d0042;
        /**  DO NOT TRANSLATE 
         */
        public static final int sans_serif=0x7f0d00c0;
        /**  screensaver settings strings 
 Label for the screen saver activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int screensaver_settings=0x7f0d008e;
        /**  Abbreviation for temporal seconds [CHAR LIMIT=1] 
         */
        public static final int seconds_label=0x7f0d005f;
        public static final int seconds_label_description=0x7f0d0062;
        /**  Describes the purpose of the button to show the remaining choices whenever there were too many 
         */
        public static final int see_all=0x7f0d0081;
        /**  Accessibility announcement for the day picker [CHAR LIMIT=NONE] 
         */
        public static final int select_day=0x7f0d00b9;
        /**  Accessibility announcement for hour circular picker [CHAR LIMIT=NONE] 
         */
        public static final int select_hours=0x7f0d00b5;
        /**  Accessibility announcement for minute circular picker [CHAR LIMIT=NONE] 
         */
        public static final int select_minutes=0x7f0d00b6;
        /**  Accessibility announcement for the year picker [CHAR LIMIT=NONE] 
         */
        public static final int select_year=0x7f0d00ba;
        /**  Label for selected cities in Cities list view 
         */
        public static final int selected_cities_label=0x7f0d0056;
        public static final int selection_radius_multiplier=0x7f0d00aa;
        /**  Preference category on Alarm Settings screen: Set alarm 
 Also label for the old Alarms dialog activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int set_alarm=0x7f0d0011;
        /**  Settings activity name 
 Label for the Settings activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int settings=0x7f0d002b;
        /**  Menu item on Alarm Clock screen: Show clock 
         */
        public static final int show_clock=0x7f0d000d;
        /**  Summary for the alarm preference when silent is chosen. 
         */
        public static final int silent_alarm_summary=0x7f0d0034;
        /**  slash between date and next alarm in the clock 
         */
        public static final int slash=0x7f0d0095;
        /**  Setting title for changing the snooze duration. 
         */
        public static final int snooze_duration_title=0x7f0d002c;
        /**  Describes the running service for the stopwatch 
         */
        public static final int stopwatch_service_desc=0x7f0d0083;
        /**  Describes the purpose of the button to record current the stopwatch value into the4 collection of lap times. 
         */
        public static final int sw_lap_button=0x7f0d005a;
        /**  Label to enumerate the number of laps in the notification the user has counted 
         */
        public static final int sw_notification_lap_number=0x7f0d0066;
        /**  Describes the purpose of the button to return the stopwatch to zero and remove the lap times. 
         */
        public static final int sw_reset_button=0x7f0d005b;
        /**  Stop Watch strings 
 Describes the purpose of the button to resume running a stopwatch 
         */
        public static final int sw_resume_button=0x7f0d0057;
        /**  Describes the purpose of the button to share the stopwatch value. 
         */
        public static final int sw_share_button=0x7f0d005c;
        /**  Header within the message created to share a list of lap times (a new line is appended to this) 
         */
        public static final int sw_share_laps=0x7f0d0065;
        /**   Stopwatch share strings 
 Sentence within the message created to share the total time recorded within the stopwatch 
         */
        public static final int sw_share_main=0x7f0d0064;
        /**  Describes the purpose of the button to begin running a stopwatch 
         */
        public static final int sw_start_button=0x7f0d0058;
        /**  Describes the purpose of the button to pause a stopwatch. 
         */
        public static final int sw_stop_button=0x7f0d0059;
        /**  Desription for the stopped stop watch 
         */
        public static final int swn_stopped=0x7f0d0084;
        public static final int text_size_multiplier_inner=0x7f0d00b0;
        public static final int text_size_multiplier_normal=0x7f0d00af;
        public static final int text_size_multiplier_outer=0x7f0d00b1;
        /**  Setting labels on Set alarm screen: Set time  
         */
        public static final int time=0x7f0d0016;
        /**  add 00 as minutes to the time when pressing this button 
         */
        public static final int time_picker_00_label=0x7f0d007e;
        /**  add 30 as minutes to the time when pressing this button 
         */
        public static final int time_picker_30_label=0x7f0d007f;
        /**   place holder for am/pm label when it is not set 
         */
        public static final int time_picker_ampm_label=0x7f0d007d;
        /**  Textual content of the button to discard the current dialog values and close the dialog 
         */
        public static final int time_picker_cancel=0x7f0d007a;
        /**  Textual content of the button to update an alarm with the current dialog values 
         */
        public static final int time_picker_set=0x7f0d007b;
        public static final int time_picker_time_seperator=0x7f0d007c;
        /**  DO NOT TRANSLATE 
         */
        public static final int time_placeholder=0x7f0d00bd;
        /**  DO NOT TRANSLATE 
         */
        public static final int time_separator=0x7f0d00be;
        /**  timer strings 
 Describes the purpose of the button to add a new timer 
         */
        public static final int timer_add_timer=0x7f0d0067;
        /**  Describes the purpose of the button to discard the current dialog values. Will also close the dialog if other time's exist 
         */
        public static final int timer_cancel=0x7f0d006f;
        /**  Describes the purpose of the button to delete a timer. 
         */
        public static final int timer_delete=0x7f0d0069;
        /**  Timer deletion confirmation 
         */
        public static final int timer_delete_confirmation=0x7f0d009b;
        /**  Describes the purpose of the button to stop and delete the timer. 
         */
        public static final int timer_done=0x7f0d006d;
        /**  Label associated with a notification for a Timer 
         */
        public static final int timer_notification_label=0x7f0d0071;
        /**  Like "timer_plus_one", but with 'minute' abbreviated for the notification. 
         */
        public static final int timer_plus_1_min=0x7f0d006b;
        /**  Describes the purpose of the button increase the remaining time on a timer by one minute. 
         */
        public static final int timer_plus_one=0x7f0d006a;
        /**  Describes the purpose of the button to return the timer to it's original starting value. 
         */
        public static final int timer_reset=0x7f0d006e;
        /**  A description for the DeskClock timer sound playback service.
         [CHAR LIMIT=NONE] 
         */
        public static final int timer_ring_service_desc=0x7f0d0047;
        /**  Describes the purpose of the button to begin or continue running a timer 
         */
        public static final int timer_start=0x7f0d0068;
        /**  Describes the purpose of the button to stop the timer. 
         */
        public static final int timer_stop=0x7f0d006c;
        /**  Notification title when timer is stopped. 
         */
        public static final int timer_stopped=0x7f0d0089;
        /**  Notification content shown when a timer has completed and has no more time remaining 
         */
        public static final int timer_times_up=0x7f0d0070;
        /**  Notification title when at least one timer, of those in use, is counting down. 
         */
        public static final int timers_in_use=0x7f0d008c;
        /**  Notification title when multiple timers are stopped. 
         */
        public static final int timers_stopped=0x7f0d008a;
        /**  Dialog title of the volume and power setting. 
         */
        public static final int volume_button_dialog_title=0x7f0d0039;
        /**  Title of the setting to change hardware button behavior. This string
         should be changed for each piece of hardware. [CHAR LIMIT=20] 
         */
        public static final int volume_button_setting_title=0x7f0d0038;
        /**  Font size for AM/PM should match widget_label_font_size 
 Font size for AM/PM should match widget_label_font_size 
         */
        public static final int wc_widget_12_hours_format=0x7f0d00a0;
        /**  What to show the user if the weather widget exists but fails to
         respond. This is a sign of an error; if the weather widget is not
         present on the device, we show nothing at all. 
         */
        public static final int weather_fetch_failure=0x7f0d0044;
        /**  Font size for AM/PM should match label_font_size 
 Font size for AM/PM should match label_font_size 
         */
        public static final int world_clock_12_hours_format=0x7f0d00a2;
        /**  slash between date and next alarm in the clock 
         */
        public static final int world_day_of_week_label=0x7f0d0096;
        /** 
        Content description for the year selector in the date picker, which displays
        a scrolling, vertical list of years.
        [CHAR LIMIT=50]
     
         */
        public static final int year_picker_description=0x7f0d00b8;
        public static final int zero=0x7f0d0063;
    }
    public static final class style {
        /**  NOTE: This must be a fullscreen theme, or else the fullscreen alarm will
         be unable to turn the screen on. 
 NOTE: This must be a fullscreen theme, or else the fullscreen alarm will
         be unable to turn the screen on. 
         */
        public static final int AlarmAlertFullScreenTheme=0x7f10000d;
        public static final int AlarmAlertFullScreenWindowTitle=0x7f10000c;
        public static final int AlarmClockTheme=0x7f100006;
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f100038;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f100039;
        public static final int ButtonStripLeft=0x7f100010;
        public static final int ButtonStripMiddle=0x7f100011;
        public static final int ButtonStripRight=0x7f100012;
        public static final int CitiesTheme=0x7f100008;
        public static final int DeskClock=0x7f100001;
        public static final int DeskClockBarStyle=0x7f100004;
        public static final int DeskClockDropDownListView=0x7f100005;
        public static final int DeskClockTabBarStyle=0x7f100003;
        public static final int DeskClockTabStyle=0x7f100002;
        public static final int RoundTouchButton=0x7f10000f;
        public static final int ScreensaverActivityTheme=0x7f10000e;
        public static final int SetAlarmTheme=0x7f10000b;
        public static final int SettingsTheme=0x7f100007;
        public static final int SettingsTheme_ActionBar=0x7f100009;
        public static final int SettingsTheme_TextAppearance_ActionBar_Title=0x7f10000a;
        public static final int TextAppearance=0x7f100031;
        /**  Status Bar Styles 
         */
        public static final int TextAppearance_StatusBar=0x7f100032;
        /**  Notification content styles 
         */
        public static final int TextAppearance_StatusBar_EventContent=0x7f100033;
        public static final int TextAppearance_StatusBar_EventContent_Line2=0x7f100035;
        public static final int TextAppearance_StatusBar_EventContent_Time=0x7f100036;
        public static final int TextAppearance_StatusBar_EventContent_Title=0x7f100034;
        public static final int TimePickerDialog=0x7f100030;
        public static final int ToastBarStyle=0x7f100037;
        public static final int alarm_label=0x7f100023;
        public static final int alarm_label_bold=0x7f100025;
        public static final int alarm_label_not_caps=0x7f100024;
        public static final int alarm_list_left_column=0x7f100013;
        public static final int ampm_label=0x7f10003b;
        public static final int big_thin=0x7f100021;
        public static final int body=0x7f100026;
        public static final int body_bold=0x7f100028;
        public static final int body_not_caps=0x7f100027;
        public static final int bold_button=0x7f10002c;
        public static final int button=0x7f100029;
        public static final int city_name=0x7f10002e;
        public static final int city_time=0x7f10002f;
        public static final int clock=0x7f100000;
        public static final int day_of_week_label_condensed=0x7f10003c;
        public static final int dialog_button=0x7f10002b;
        public static final int dialpad=0x7f10002d;
        public static final int done_button_light=0x7f10003e;
        public static final int header=0x7f10001f;
        public static final int header_not_caps=0x7f100020;
        public static final int label=0x7f10001c;
        public static final int label_not_caps=0x7f10001d;
        public static final int medium_light=0x7f10001a;
        public static final int no_alarms=0x7f100016;
        public static final int small_bold=0x7f100014;
        public static final int small_light=0x7f100017;
        public static final int small_thin=0x7f100015;
        public static final int time_label=0x7f10003a;
        /**  Style for dialog labels. 
         */
        public static final int time_label_thin=0x7f10003d;
        public static final int timer_label=0x7f10002a;
        public static final int timer_setup_digit=0x7f100018;
        public static final int timer_setup_label=0x7f100019;
        public static final int widget_big_thin=0x7f100022;
        public static final int widget_label=0x7f10001e;
        public static final int widget_medium_thin=0x7f10001b;
    }
    public static final class xml {
        public static final int analog_appwidget=0x7f060000;
        public static final int digital_appwidget=0x7f060001;
        public static final int dream_info=0x7f060002;
        public static final int dream_settings=0x7f060003;
        public static final int settings=0x7f060004;
    }
    public static final class styleable {
        /** Attributes that can be used with a AnalogClock.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnalogClock_jewelColor com.android.deskclock:jewelColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnalogClock_jewelOffset com.android.deskclock:jewelOffset}</code></td><td></td></tr>
           <tr><td><code>{@link #AnalogClock_jewelRadius com.android.deskclock:jewelRadius}</code></td><td></td></tr>
           </table>
           @see #AnalogClock_jewelColor
           @see #AnalogClock_jewelOffset
           @see #AnalogClock_jewelRadius
         */
        public static final int[] AnalogClock = {
            0x7f01000d, 0x7f01000e, 0x7f01000f
        };
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#jewelColor}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:jewelColor
        */
        public static final int AnalogClock_jewelColor = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#jewelOffset}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:jewelOffset
        */
        public static final int AnalogClock_jewelOffset = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#jewelRadius}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:jewelRadius
        */
        public static final int AnalogClock_jewelRadius = 0;
        /** Attributes that can be used with a GlowPadView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GlowPadView_alwaysTrackFinger com.android.deskclock:alwaysTrackFinger}</code></td><td> Used when the handle shouldn't wait to be hit before following the finger </td></tr>
           <tr><td><code>{@link #GlowPadView_android_gravity android:gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #GlowPadView_directionDescriptions com.android.deskclock:directionDescriptions}</code></td><td> Reference to an array resource that be used to announce the directions with targets around the circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_feedbackCount com.android.deskclock:feedbackCount}</code></td><td> Number of waves/chevrons to show in animation.</td></tr>
           <tr><td><code>{@link #GlowPadView_glowRadius com.android.deskclock:glowRadius}</code></td><td> Size of target radius.</td></tr>
           <tr><td><code>{@link #GlowPadView_handleDrawable com.android.deskclock:handleDrawable}</code></td><td> Sets a drawable as the center.</td></tr>
           <tr><td><code>{@link #GlowPadView_innerRadius com.android.deskclock:innerRadius}</code></td><td> Inner radius of glow area.</td></tr>
           <tr><td><code>{@link #GlowPadView_outerRadius com.android.deskclock:outerRadius}</code></td><td> Outer radius of glow area.</td></tr>
           <tr><td><code>{@link #GlowPadView_outerRingDrawable com.android.deskclock:outerRingDrawable}</code></td><td> Drawable to use for wave ripple animation.</td></tr>
           <tr><td><code>{@link #GlowPadView_pointDrawable com.android.deskclock:pointDrawable}</code></td><td> Drawble used for drawing points </td></tr>
           <tr><td><code>{@link #GlowPadView_snapMargin com.android.deskclock:snapMargin}</code></td><td> How close we need to be before snapping to a target.</td></tr>
           <tr><td><code>{@link #GlowPadView_targetDescriptions com.android.deskclock:targetDescriptions}</code></td><td> Reference to an array resource that be used as description for the targets around the circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_targetDrawables com.android.deskclock:targetDrawables}</code></td><td> Reference to an array resource that be shown as targets around a circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_vibrationDuration com.android.deskclock:vibrationDuration}</code></td><td> Tactile feedback duration for actions.</td></tr>
           </table>
           @see #GlowPadView_alwaysTrackFinger
           @see #GlowPadView_android_gravity
           @see #GlowPadView_directionDescriptions
           @see #GlowPadView_feedbackCount
           @see #GlowPadView_glowRadius
           @see #GlowPadView_handleDrawable
           @see #GlowPadView_innerRadius
           @see #GlowPadView_outerRadius
           @see #GlowPadView_outerRingDrawable
           @see #GlowPadView_pointDrawable
           @see #GlowPadView_snapMargin
           @see #GlowPadView_targetDescriptions
           @see #GlowPadView_targetDrawables
           @see #GlowPadView_vibrationDuration
         */
        public static final int[] GlowPadView = {
            0x010100af, 0x7f010000, 0x7f010001, 0x7f010002,
            0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006,
            0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a,
            0x7f01000b, 0x7f01000c
        };
        /**
          <p>
          @attr description
           Used when the handle shouldn't wait to be hit before following the finger 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:alwaysTrackFinger
        */
        public static final int GlowPadView_alwaysTrackFinger = 13;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#gravity}
          attribute's value can be found in the {@link #GlowPadView} array.
          @attr name android:gravity
        */
        public static final int GlowPadView_android_gravity = 0;
        /**
          <p>
          @attr description
           Reference to an array resource that be used to announce the directions with targets around the circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:directionDescriptions
        */
        public static final int GlowPadView_directionDescriptions = 3;
        /**
          <p>
          @attr description
           Number of waves/chevrons to show in animation. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:feedbackCount
        */
        public static final int GlowPadView_feedbackCount = 12;
        /**
          <p>
          @attr description
           Size of target radius. Points within this distance of target center is a "hit". 

        <attr name="hitRadius" format="dimension"/>
        
 Radius of glow under finger. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:glowRadius
        */
        public static final int GlowPadView_glowRadius = 9;
        /**
          <p>
          @attr description
           Sets a drawable as the center. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:handleDrawable
        */
        public static final int GlowPadView_handleDrawable = 4;
        /**
          <p>
          @attr description
           Inner radius of glow area. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:innerRadius
        */
        public static final int GlowPadView_innerRadius = 7;
        /**
          <p>
          @attr description
           Outer radius of glow area. Target icons will be drawn on this circle. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:outerRadius
        */
        public static final int GlowPadView_outerRadius = 8;
        /**
          <p>
          @attr description
           Drawable to use for wave ripple animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:outerRingDrawable
        */
        public static final int GlowPadView_outerRingDrawable = 5;
        /**
          <p>
          @attr description
           Drawble used for drawing points 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:pointDrawable
        */
        public static final int GlowPadView_pointDrawable = 6;
        /**
          <p>
          @attr description
           How close we need to be before snapping to a target. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:snapMargin
        */
        public static final int GlowPadView_snapMargin = 11;
        /**
          <p>
          @attr description
           Reference to an array resource that be used as description for the targets around the circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:targetDescriptions
        */
        public static final int GlowPadView_targetDescriptions = 2;
        /**
          <p>
          @attr description
           Reference to an array resource that be shown as targets around a circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:targetDrawables
        */
        public static final int GlowPadView_targetDrawables = 1;
        /**
          <p>
          @attr description
           Tactile feedback duration for actions. Set to '0' for no vibration. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:vibrationDuration
        */
        public static final int GlowPadView_vibrationDuration = 10;
        /** Attributes that can be used with a TextTime.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextTime_format12Hour com.android.deskclock:format12Hour}</code></td><td> Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode.</td></tr>
           <tr><td><code>{@link #TextTime_format24Hour com.android.deskclock:format24Hour}</code></td><td> Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode.</td></tr>
           </table>
           @see #TextTime_format12Hour
           @see #TextTime_format24Hour
         */
        public static final int[] TextTime = {
            0x7f010010, 0x7f010011
        };
        /**
          <p>
          @attr description
           Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "h:mm a". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:format12Hour
        */
        public static final int TextTime_format12Hour = 0;
        /**
          <p>
          @attr description
           Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "H:mm". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:format24Hour
        */
        public static final int TextTime_format24Hour = 1;
    };
}
